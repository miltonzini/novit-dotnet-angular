// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using academia2024.Database;

#nullable disable

namespace academia2024.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240307045307_AgregarVentasUsuarioYActualizarVendedorIdReserva")]
    partial class AgregarVentasUsuarioYActualizarVendedorIdReserva
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("academia2024.Domain.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Barrio")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Precio")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UrlImagen")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("IdProducto");

                    b.ToTable("Producto");

                    b.HasData(
                        new
                        {
                            IdProducto = 1,
                            Barrio = "Palermo",
                            Codigo = "abc123",
                            Descripcion = "Casa con patio.",
                            Estado = "reservado",
                            Precio = 50,
                            UrlImagen = "https://picsum.photos/200"
                        },
                        new
                        {
                            IdProducto = 2,
                            Barrio = "Almagro",
                            Codigo = "oqj234",
                            Descripcion = "Departamento 2 ambientes.",
                            Estado = "reservado",
                            Precio = 999,
                            UrlImagen = "https://picsum.photos/201"
                        },
                        new
                        {
                            IdProducto = 3,
                            Barrio = "Monserrat",
                            Codigo = "hij255",
                            Descripcion = "Departamento 4 ambientes.",
                            Estado = "disponible",
                            Precio = 888,
                            UrlImagen = "https://picsum.photos/202"
                        },
                        new
                        {
                            IdProducto = 4,
                            Barrio = "Palermo",
                            Codigo = "oij255",
                            Descripcion = "Departamento 1 ambiente.",
                            Estado = "disponible",
                            Precio = 888,
                            UrlImagen = "https://picsum.photos/210"
                        },
                        new
                        {
                            IdProducto = 5,
                            Barrio = "Monserrat",
                            Codigo = "laq255",
                            Descripcion = "Monoambiente.",
                            Estado = "disponible",
                            Precio = 888,
                            UrlImagen = "https://picsum.photos/210"
                        },
                        new
                        {
                            IdProducto = 6,
                            Barrio = "Saavedra",
                            Codigo = "asdasd",
                            Descripcion = "Casa.",
                            Estado = "vendido",
                            Precio = 1500000,
                            UrlImagen = "https://picsum.photos/217"
                        });
                });

            modelBuilder.Entity("academia2024.Domain.Reserva", b =>
                {
                    b.Property<int>("IdReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.HasKey("IdReserva");

                    b.HasIndex("ProductoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reserva");

                    b.HasData(
                        new
                        {
                            IdReserva = 1,
                            Estado = "ingresada",
                            ProductoId = 1,
                            UsuarioId = 1
                        },
                        new
                        {
                            IdReserva = 2,
                            Estado = "ingresada",
                            ProductoId = 2,
                            UsuarioId = 2
                        },
                        new
                        {
                            IdReserva = 3,
                            Estado = "aprobada",
                            ProductoId = 6,
                            UsuarioId = 3
                        });
                });

            modelBuilder.Entity("academia2024.Domain.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Ventas")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1,
                            NombreUsuario = "Juan",
                            Password = "abcde",
                            Rol = "comercial",
                            Ventas = 0
                        },
                        new
                        {
                            IdUsuario = 2,
                            NombreUsuario = "Martín",
                            Password = "hijkl",
                            Rol = "comercial",
                            Ventas = 0
                        },
                        new
                        {
                            IdUsuario = 3,
                            NombreUsuario = "Esteban",
                            Password = "abcd987",
                            Rol = "vendedor",
                            Ventas = 1
                        });
                });

            modelBuilder.Entity("academia2024.Domain.Reserva", b =>
                {
                    b.HasOne("academia2024.Domain.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("academia2024.Domain.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
